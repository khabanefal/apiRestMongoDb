plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.8'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'org.openapi.generator' version "4.3.1" // adding contract yaml to generate model and controller
}

group = 'com.tawfekh'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	mapstructVersion = "1.4.2.Final"
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	implementation "io.swagger.parser.v3:swagger-parser:2.0.20" // adding contract yaml to generate model and controller
	implementation "org.openapitools:jackson-databind-nullable:0.2.1" // adding contract yaml to generate model and controller
	// https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
	implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.14.2'

	//mapstruct
	annotationProcessor group: 'org.mapstruct', name: 'mapstruct', version: '1.4.2.Final'
	implementation group: 'org.mapstruct', name: 'mapstruct', version: '1.4.2.Final'
	annotationProcessor group: 'org.mapstruct', name: 'mapstruct-processor', version: '1.4.2.Final'
	implementation group: 'org.mapstruct', name: 'mapstruct-processor', version: '1.4.2.Final'

	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-mongodb-reactive
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-mongodb-reactive', version: '2.7.8'
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-webflux
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-webflux', version: '2.7.8'

	// If we are using mapstruct in test code
	testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

// generates the spring controller interfaces from openapi spec in src/main/resources/service.yaml
openApiGenerate {
	generatorName = "spring"
	inputSpec = "$projectDir/src/main/resources/apiRestMongoDb-openapi.yaml"
	outputDir = "$buildDir/generated"
	configOptions = [
			useTags: "true",
			apiPackage: "org.tawfekh.mongodbservice.api",
			invokerPackage: "org.tawfekh.mongodbservice",
			modelPackage: "org.tawfekh.mongodbservice.models.api.resource",
			dateLibrary: "java8",
			interfaceOnly: "true",
			useBeanValidation: "true",
			skipDefaultInterface: "true",
	]
}

// forces generation of spring controllers on compile, adding them to the sources for compilation
compileJava.dependsOn tasks.openApiGenerate
sourceSets.main.java.srcDir "$buildDir/generated/src/main/java"
sourceSets.main.resources.srcDir "$buildDir/generated/src/main/resources"

tasks.named('test') {
	useJUnitPlatform()
}
